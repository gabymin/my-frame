plugins {
    id 'com.android.application'
    id 'kotlin-android'
    id 'kotlin-android-extensions'
    id 'kotlin-kapt'
}

android {
    compileSdkVersion Configs.compileSdk
    buildToolsVersion Configs.buildTools
    lintOptions {
        checkReleaseBuilds false
        // Or, if you prefer, you can continue to check for errors in release builds,
        // but continue the build even when errors are found:
        abortOnError false
    }
    defaultConfig {
        applicationId Configs.applicationId
        minSdkVersion Configs.minSdk
        targetSdkVersion Configs.targetSdk
        versionCode Configs.versionCode
        versionName Configs.versionName
        multiDexEnabled = true
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        //ARouter
        kapt {
            arguments {
                arg("AROUTER_MODULE_NAME", project.getName())
                arg("AROUTER_GENERATE_DOC", "enable")
            }
        }

        buildConfigField("String", "HOST", "\"http://10.0.22.64:1080/\"")
        buildConfigField("String", "STATIC_HOST", "\"http://10.0.22.64:1663/\"")

    }
    dataBinding {
        enabled true
    }

    signingConfigs {
        config {
            keyAlias Configs.keyAlias
            keyPassword Configs.keyPassword
            storeFile file(Configs.storeFile)
            storePassword Configs.storePassword
        }
    }
    buildTypes {
        debug {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            buildConfigField("Boolean", "SAVE_LOG", "true")
            signingConfig signingConfigs.config
        }
        release {
            debuggable false
            //资源压缩
            shrinkResources true
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            buildConfigField("Boolean", "SAVE_LOG", "false")
            signingConfig signingConfigs.config
        }
    }
    compileOptions {
        coreLibraryDesugaringEnabled true
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }

    flavorDimensions("brand", "servers")
    productFlavors {
        create("devlCn") {
            setDimension("brand")
            applicationId = Configs.applicationId

        }

        create("prodCn") {
            setDimension("brand")
            applicationId = "com.westig.frame.prod"

        }

        // 开发服务器 dev
        create("devel") {
            setDimension("servers")
            buildConfigField("String", "HOST", "\"http://10.0.22.120:1080/\"")
            buildConfigField("String", "STATIC_HOST", "\"http://10.0.22.120:1663/\"")
        }
        // 中国生产服务器
        create("prodcn") {
            setDimension("servers")
            buildConfigField("String", "HOST", "\"https://api.magefitness.com:1443/\"")
            buildConfigField("String", "STATIC_HOST", "\"https://api.magefitness.com:1663/\"")

        }
    }

    //重命名apk
    applicationVariants.all { variant ->
        variant.outputs.all {
            outputFileName = it.outputFileName.replace(".apk", "-${variant.versionName}.apk")
        }
    }

}

dependencies {

    coreLibraryDesugaring 'com.android.tools:desugar_jdk_libs:1.1.5'
    implementation "androidx.core:core-ktx:${Versions.ktxCore}"
    implementation "androidx.appcompat:appcompat:${Versions.appCompat}"
    implementation "com.google.android.material:material:${Versions.materialVersion}"
    implementation "androidx.constraintlayout:constraintlayout:${Versions.constraintlayout}"
    implementation "androidx.lifecycle:lifecycle-livedata-ktx:${Versions.lifecycle}"
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:${Versions.lifecycle}"
    testImplementation "junit:junit:4.+"
    androidTestImplementation "androidx.test.ext:junit:1.1.3"
    androidTestImplementation "androidx.test.espresso:espresso-core:${Versions.espresso}"

    // RxJava
    implementation "io.reactivex.rxjava2:rxjava:${Versions.rxjavaVersion}"
    implementation "io.reactivex.rxjava2:rxandroid:${Versions.rxandroidVersion}"
    implementation "androidx.lifecycle:lifecycle-extensions:${Versions.rxandroidVersion}"
    //gson
    implementation "com.google.code.gson:gson:${Versions.gson}"
    implementation "com.squareup.retrofit2:retrofit:${Versions.retrofit}"
    implementation "com.squareup.retrofit2:adapter-rxjava2:${Versions.retrofit}"
    implementation 'com.squareup.retrofit2:converter-gson:2.3.0'

    // 工具包，数据库
    implementation "com.blankj:utilcode:${Versions.utilcodeVersion}"
    implementation "androidx.room:room-runtime:${Versions.roomVersion}"
    implementation "androidx.room:room-rxjava2:${Versions.roomVersion}"
    implementation "androidx.room:room-testing:${Versions.roomVersion}"
    implementation "javax.inject:javax.inject:1"
    kapt("androidx.room:room-compiler:${Versions.roomVersion}")

    //注解器
    implementation "com.alibaba:arouter-annotation:${Versions.arouterAnnotationVersion}"
    implementation "com.alibaba:arouter-api:${Versions.arouterApiVersion}"
    implementation "com.alibaba:arouter-compiler:${Versions.arouterCompilerVersion}"

    //权限
    implementation "com.yanzhenjie:permission:${Versions.permissionVersion}"

    //http logger
    implementation "com.squareup.okhttp3:logging-interceptor:${Versions.loggingVersion}"
    //dagger
    implementation "com.google.dagger:dagger:${Versions.dagger}"
    implementation "com.google.dagger:dagger-android:${Versions.dagger}"
    implementation "com.google.dagger:dagger-android-support:${Versions.dagger}"
    kapt("com.google.dagger:dagger-android-processor:${Versions.dagger}")
    kapt("com.google.dagger:dagger-compiler:${Versions.dagger}")

    //图片加载
    api("com.github.bumptech.glide:glide:4.12.0")
    api("com.github.bumptech.glide:recyclerview-integration:4.10.0")
    api("com.github.bumptech.glide:okhttp3-integration:4.10.0")
    kapt("com.github.bumptech.glide:compiler:4.12.0")
    //日志
    implementation "com.orhanobut:logger:${Versions.loggerVersion}"
    //Eventbus
    implementation "org.greenrobot:eventbus:${Versions.eventbusVersion}"

}